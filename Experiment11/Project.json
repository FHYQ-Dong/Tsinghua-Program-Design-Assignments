{
    "Name": "Experiment11-董皓彧",
    "Url": "https://github.com/FHYQ-Dong/Tsinghua-Program-Design-Assignments/tree/main/Experiment11",
    "Environment": [
        "gcc.exe (x86_64-win32-seh-rev0, Built by MinGW-W64 project) 8.1.0",
        "Visual Stdio Code 1.84.2"
    ],
    "Experiments": {
        "compulsive": [
            {
                "Name": "Experiment11-1",
                "Problem": "编写程序，将两个长度各为 10 的整型数组数据按从小到大排序，然后将两组数据合并到一个长度为 20 的整型数组中，合并后的数组仍然按照从小到大排序。",
                "Input-Format": "共 2 行，分别为两个数组",
                "Output-Format": "共 1 行，为合并后的数组",
                "Path-to-C": "compulsive/Experiment11-1.c",
                "Path-to-EXE": "compulsive/Experiment11-1.exe",
                "Inputs": [
                    "1 12 3 14 5 16 7 18 9 20\n10 19 8 17 6 15 4 13 2 11",
                    "1 3 5 7 9 11 13 15 17 19\n2 4 6 8 10 12 14 16 18 20",
                    "1 1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2 2",
                    "1 2 3 4 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1",
                    "1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10"
                ]
            },
            {
                "Name": "Experiment11-2",
                "Problem": "有 n（n<50）个人围成一圈，顺序编号。从第 1 个人开始报数（1，2，3），报数为 3 者退出圈子。问最后留下来的人刚开始时排在几号？",
                "Input-Format": "共 1 行，一个整数 n",
                "Output-Format": "共 1 行，一个整数，表示最后留下来的人刚开始时排在几号",
                "Path-to-C": "compulsive/Experiment11-2.c",
                "Path-to-EXE": "compulsive/Experiment11-2.exe",
                "Inputs": [
                    "10",
                    "1",
                    "50",
                    "2",
                    "29"
                ]
            },
            {
                "Name": "Experiment11-3",
                "Problem": "编写程序，从键盘读入 10 个整数，将其存在一个长度为 10 的一维数组 a[] 中。然后输出该组数据从小到大的排序结果以及在原数组中的下标。（假设输入中无重复数据）",
                "Input-Format": "共 1 行，10 个整数",
                "Output-Format": "共 2 行：\n第 1 行，排序后的数组；\n第 2 行，在原数组中的下标。",
                "Path-to-C": "compulsive/Experiment11-3.c",
                "Path-to-EXE": "compulsive/Experiment11-3.exe",
                "Inputs": [
                    "10 9 8 7 6 5 4 3 2 1",
                    "1 10 2 9 3 8 4 7 5 6",
                    "6 7 8 9 10 5 4 3 2 1",
                    "1 2 3 4 5 6 7 8 9 10",
                    "6 3 7 8 2 5 10 1 9 4"
                ]
            }              
        ],
        "optional": [
            {
                "Name": "Optional-Experiment11-1",
                "Problem": "下列程序的输出结果是？",
                "Input-Format": "无",
                "Output-Format": "输出结果，具体解析见代码注释",
                "Path-to-C": "optional/Optional-Experiment11-1.c",
                "Path-to-EXE": "optional/Optional-Experiment11-1.exe",
                "Inputs": []
            },
            {
                "Name": "Optional-Experiment11-2",
                "Problem": "验证卡布列克运算。任意一个四位数，只要它们各个位上的数字是不全相同的，就有这样的规律：\n1. 将组成这个四位数的 4 个数字由大到小排列，形成由这 4 个数字构成的最大的四位数；\n2. 将组成这个四位数的 4 个数字由小到大排列，形成由这 4 个数字构成的最小的四位数（如果4个数字中含有0，则得到的数不足四位）；\n3. 求两个数的差，得到一个新的四位数；\n4. 重复以上过程，最后得到的结果总是 6174。",
                "Input-Format": "共 1 行，一个整数 N",
                "Output-Format": "若 N 为各个位上数字不全相同的四位数，则输出验证卡布列克运算的公式；否则输出 \"error\"。",
                "Path-to-C": "optional/Optional-Experiment11-2.c",
                "Path-to-EXE": "optional/Optional-Experiment11-2.exe",
                "Inputs": [
                    "1234",
                    "1234567",
                    "9999",
                    "9998",
                    "1000"
                ]
            }
        ]
    }
}